{"version":3,"sources":["components/Interval.js","components/CurrentSession.js","App.js","index.js"],"names":["Interval","className","id","this","props","label","text","icon","faArrowDown","onClick","decrease","idDecrement","idLength","length","faArrowUp","increase","idIncrement","React","Component","CurrentSession","currentTime","faStopwatch","startStopTimer","faRedo","reset","App","tick","state","minutes","seconds","handleBreak","setState","prevState","createTime","document","title","isBreak","getElementById","innerText","sessionLength","breakLength","decreaseBreak","increaseBreak","decreaseSession","isRunning","newSessionLength","increaseSession","handleStart","handleStop","clearInterval","intervalID","setInterval","min","sec","d","Date","addZero","t","setMinutes","setSeconds","getMinutes","getSeconds","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.495cad7e.chunk.js","sourcesContent":["import React from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faArrowUp, faArrowDown } from '@fortawesome/free-solid-svg-icons'\n// import favicon, onclick: change state\n\nclass Interval extends React.Component {\n   \n    \n    render() {\n        return (\n                <div className=\"wrapper\">\n                    <p id={this.props.label}>{this.props.text}</p>\n                    <div className=\"oneLine\">\n                        <FontAwesomeIcon icon={faArrowDown} onClick={this.props.decrease} id={this.props.idDecrement}/>\n                        <span id={this.props.idLength}>{this.props.length}</span>\n                        <FontAwesomeIcon icon={faArrowUp} onClick={this.props.increase} id={this.props.idIncrement}/>\n                    </div>\n                </div> \n        )\n    }\n\n}\n\nexport default Interval;","import React from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faStopwatch, faRedo } from '@fortawesome/free-solid-svg-icons'\n\n\n\nfunction CurrentSession(props){\n    \n\n        return (\n            <div className=\"center\">\n            <div className=\"wrapper tomato\">\n                <h2 id=\"timer-label\">Session</h2>\n                <p id=\"time-left\">{props.currentTime}</p>\n                <div>\n                    <FontAwesomeIcon className=\"icon\" icon={faStopwatch} onClick={props.startStopTimer} id=\"start_stop\"/>\n                    <FontAwesomeIcon className=\"icon\" icon={faRedo} onClick={props.reset} id=\"reset\"/>\n                </div>\n            </div>\n            </div>\n        )\n    \n\n        }\nexport default CurrentSession\n\n","import React from 'react'\nimport Interval from './components/Interval'\nimport CurrentSession from './components/CurrentSession'\n\nclass App extends React.Component {\n    constructor(){\n        super()\n        this.state = {\n            seconds: 0,\n            minutes: 25,\n            currentTime: \"25:00\", \n            sessionLength: 25,\n            breakLength: 5,\n            isRunning: false,\n            isBreak: false\n        }\n    }\n\n    createTime(min, sec) {\n        var d = new Date()\n        d.setMinutes(min)\n        d.setSeconds(sec)\n        function addZero(t){\n        if(t < 10) {\n            t = \"0\" + t\n        }\n        return t\n        }\n    return addZero(d.getMinutes()) + \":\" + addZero(d.getSeconds())\n    }\n\n    tick = () => {\n        if(this.state.minutes === 0 && this.state.seconds === 0){\n            this.handleBreak();\n        }\n        else {\n            this.setState(prevState => {\n                     // decrease by one second\n                     prevState.seconds === 0? this.setState({seconds: 59, minutes: prevState.minutes - 1}): this.setState({\n                         seconds: prevState.seconds - 1\n                     })\n             })\n            }\n        // display updated time\n        this.setState({currentTime: this.createTime(this.state.minutes, this.state.seconds)})\n        //update document title\n        document.title = this.state.currentTime\n    }\n\n    handleBreak = () => {\n        if(!this.isBreak){\n            //set current time equal to break time -> display break time\n            document.getElementById('timer-label').innerText = \"Break Time\";\n            this.setState({\n                isBreak: true,\n                minutes: this.state.breakLength,\n            })\n        } else if(this.isBreak){\n            document.getElementById('timer-label').innerText = \"Session\";\n            this.setState({\n                isBreak: false,\n                minutes: this.state.sessionLength,\n            })\n        }\n    }\n\n    decreaseBreak = () => {\n        if(this.state.breakLength >= 2){\n            this.setState((prevState) => {\n                return {\n                    breakLength : prevState.breakLength - 1\n                }\n            })\n        }\n    }\n\n    increaseBreak = () => {\n        this.setState((prevState) => {\n            return {\n                breakLength: prevState.breakLength + 1\n            }\n        })\n    }\n\n    decreaseSession = () => {\n        if(this.state.isRunning === false &&  this.state.sessionLength >= 2){\n            this.setState((prevState) => {\n                let newSessionLength =  prevState.sessionLength - 1\n                return {\n                    sessionLength: newSessionLength,\n                    minutes: newSessionLength,\n                    seconds: 0,\n                    currentTime: this.createTime(newSessionLength, 0)\n                }\n            })\n        }\n    }\n\n    increaseSession = () => {\n        if(this.state.isRunning === false) {\n            this.setState((prevState) => {\n                let newSessionLength = prevState.sessionLength + 1\n                return {\n                    sessionLength: newSessionLength,\n                    minutes: newSessionLength,\n                    seconds: 0,\n                    currentTime: this.createTime(newSessionLength, 0)\n                }\n            })\n        }\n    }\n\n    startStopTimer = () => {\n        this.handleStart();\n        this.handleStop();\n    }\n\n    handleStop = () => {\n        if(this.state.isRunning) {\n            clearInterval(this.intervalID) \n            this.setState({isRunning: false})\n        }\n    }\n\n    handleStart = () => {\n        if(!this.state.isRunning) {\n            this.setState({isRunning: true})\n            this.intervalID = setInterval(this.tick, 1000)\n        }\n    }\n\n    reset = () => {\n        this.setState({\n            seconds: 0,\n            minutes: 25,\n            currentTime: \"25:00\", \n            sessionLength: 25,\n            breakLength: 5\n        })\n        this.handleStop();\n    }\n\n    render(){\n        return (\n            <div>\n            <div className=\"oneLine\">\n            <Interval\n            text=\"break length\"\n            label=\"break-label\"\n            idDecrement=\"break-decrement\"\n            idIncrement=\"break-increment\"\n            idLength=\"break-length\"\n            length={this.state.breakLength}\n            decrease={this.decreaseBreak}\n            increase={this.increaseBreak}\n            />\n\n            <Interval \n            text=\"session length\"\n            label=\"session-label\"\n            idDecrement=\"session-decrement\"\n            idIncrement=\"session-increment\"\n            idLength=\"session-length\"\n            length={this.state.sessionLength}\n            decrease={this.decreaseSession}\n            increase={this.increaseSession}\n            />\n\n            </div>\n            <CurrentSession\n            currentTime={this.state.currentTime}\n            reset={this.reset}\n            startStopTimer={this.startStopTimer}\n            />\n    \n            </div>\n        )\n    }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './App.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}